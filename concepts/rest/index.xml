<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RESTCatalog on Paimon文档</title>
    <link>http://localhost:1313/paimon-docs-chinese/concepts/rest/</link>
    <description>Recent content in RESTCatalog on Paimon文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <atom:link href="http://localhost:1313/paimon-docs-chinese/concepts/rest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>http://localhost:1313/paimon-docs-chinese/concepts/rest/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/paimon-docs-chinese/concepts/rest/overview/</guid>
      <description>RESTCatalog&#xD;#&#xD;Overview&#xD;#&#xD;Paimon REST Catalog provides a lightweight implementation to access the catalog service. Paimon could access the catalog service through a catalog server which implements REST API. You can see all APIs in REST API.&#xA;Key Features&#xD;#&#xD;User Defined Technology-Specific Logic Implementation All technology-specific logic within the catalog server. This ensures that the user can define logic that could be owned by the user. Decoupled Architecture The REST Catalog interacts with the catalog server through a well-defined REST API.</description>
    </item>
    <item>
      <title>Bear Token</title>
      <link>http://localhost:1313/paimon-docs-chinese/concepts/rest/bear/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/paimon-docs-chinese/concepts/rest/bear/</guid>
      <description>Bear Token&#xD;#&#xD;A bearer token is an encrypted string, typically generated by the server based on a secret key. When the client sends a request to the server, it must include Authorization: Bearer &amp;lt;token&amp;gt; in the request header. After receiving the request, the server extracts the &amp;lt;token&amp;gt; and validates its legitimacy. If the validation passes, the authentication is successful.&#xA;CREATE CATALOG `paimon-rest-catalog` WITH ( &amp;#39;type&amp;#39; = &amp;#39;paimon&amp;#39;, &amp;#39;uri&amp;#39; = &amp;#39;&amp;lt;catalog server url&amp;gt;&amp;#39;, &amp;#39;metastore&amp;#39; = &amp;#39;rest&amp;#39;, &amp;#39;warehouse&amp;#39; = &amp;#39;my_instance_name&amp;#39;, &amp;#39;token.</description>
    </item>
    <item>
      <title>DLF Token</title>
      <link>http://localhost:1313/paimon-docs-chinese/concepts/rest/dlf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/paimon-docs-chinese/concepts/rest/dlf/</guid>
      <description>DLF Token&#xD;#&#xD;DLF (Data Lake Formation) building is a fully-managed platform for unified metadata and data storage and management, aiming to provide customers with functions such as metadata management, storage management, permission management, storage analysis, and storage optimization.&#xA;DLF provides multiple authentication methods for different environments.&#xA;The &#39;warehouse&#39; is your catalog instance name on the server, not the path.&#xD;Use the access key&#xD;#&#xD;CREATE CATALOG `paimon-rest-catalog` WITH ( &amp;#39;type&amp;#39; = &amp;#39;paimon&amp;#39;, &amp;#39;uri&amp;#39; = &amp;#39;&amp;lt;catalog server url&amp;gt;&amp;#39;, &amp;#39;metastore&amp;#39; = &amp;#39;rest&amp;#39;, &amp;#39;warehouse&amp;#39; = &amp;#39;my_instance_name&amp;#39;, &amp;#39;token.</description>
    </item>
    <item>
      <title>REST API</title>
      <link>http://localhost:1313/paimon-docs-chinese/concepts/rest/rest-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/paimon-docs-chinese/concepts/rest/rest-api/</guid>
      <description>&#xD;</description>
    </item>
  </channel>
</rss>
